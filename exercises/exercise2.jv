pipeline TrainstopsPipeline{

    TrainstopsCSVExtractor
    -> ABTableInterpreter
    -> TrainstopsSQLiteLoader;

    block TrainstopsCSVExtractor oftype CSVExtractor{
        url: "https://download-data.deutschebahn.com/static/datasets/haltestellen/D_Bahnhof_2020_alle.CSV";
        delimiter: ";";
    }

    block ABTableInterpreter oftype TableInterpreter{
        header: true;
        columns: [
            'EVA_NR' oftype integer, 
            'DS100'oftype text,     
            'IFOPT'oftype IFOPTCode,    
            'NAME'oftype text,    
            'Verkehr' oftype VerkehrCode,    
            'Laenge' oftype GeoLocation,   
            'Breite' oftype GeoLocation,    
            'Betreiber_Name' oftype text,  
            'Betreiber_Nr' oftype integer,  
            ];
    }


constraint OnlyCapitalLettersAndDigits on text:
    value matches /^[A-Z0-9]*$/;

constraint ExactlyTenCharacters on text:
    value.length == 10;

valuetype VerkehrCode oftype text {
    constraints: [
        VerkehrAllowList,
    ];
}

valuetype GeoLocation oftype decimal {
    constraints: [
        GeoConstraintWithinNinety,
    ];
}

valuetype IFOPTCode oftype text {
    constraints: [
        IFOPTConstraint,
    ];
}

constraint SecondVerkehrAllowList oftype AllowlistConstraint{
    allowlist: ["FV", "RV", "nur DPN"];
}

constraint IFOPTConstraint on text:
    value matches /[a-zA-Z]{2}:[0-9]+(:[0-9]+)?/;


constraint GeoConstraintWithinNinety on decimal:
    value >=-90 and value <=90;

constraint VerkehrAllowList on text:
    value in [
        "FV", "RV", "nur DPN",
    ];

block StatusColumnDeleter oftype ColumnDeleter {
        delete: [column D];
 }



block TrainstopsSQLiteLoader oftype SQLiteLoader {
    table: "trainstops";
    file: "./trainstops.sqlite";
}
}